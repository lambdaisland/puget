["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Promise",["^ ","~$resolved?",["^ "]],"~$Error",["^ "],"~$Object",["^ "],"~$Date",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$puget.printer","~:imports",null,"~:requires",["^ ","~$fipp.visit","^?","~$fe","~$fipp.engine","~$puget.dispatch","^B","^A","^A","~$color","~$puget.color","~$puget.color.ansi","^E","~$cljs-time.coerce","^F","~$dispatch","^B","~$puget.color.html","^H","~$str","~$clojure.string","^J","^J","~$fv","^?","^D","^D","~$arrangement.core","^L","~$order","^L"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$from-date","^F"],"~:defs",["^ ","~$is-resolved-multi",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","~:line",133,"~:column",7,"~:end-line",133,"~:end-column",24,"~:arglists",["~#list",["~$quote",["^[",[["~$promise"]]]]],"~:doc","Verify if a promise is resolved"],"^;","~$puget.printer/is-resolved-multi","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",24,"~:method-params",["^[",[["^11"]]],"~:protocol-impl",null,"~:arglists-meta",["^[",[null,null]],"^W",1,"~:variadic?",false,"^V",133,"~:ret-tag","~$js","^X",133,"~:max-fixed-arity",1,"~:fn-var",true,"^Z",["^[",["^10",["^[",[["^11"]]]]],"^12","Verify if a promise is resolved"],"~$pretty-printer",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",722,"^W",7,"^X",722,"^Y",21,"^Z",["^[",["^10",["^[",[["~$opts"]]]]],"^12","Constructs a new printer from the given configuration."],"^;","~$puget.printer/pretty-printer","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",21,"^14",["^[",[["^1="]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",722,"^18","~$puget.printer/PrettyPrinter","^X",722,"^1:",1,"^1;",true,"^Z",["^[",["^10",["^[",[["^1="]]]]],"^12","Constructs a new printer from the given configuration."],"~$PrettyPrinter",["^ ","~:num-fields",12,"~:protocols",["^:",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$fipp.visit/IVisitor","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^;","^1?","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",25,"~:type",true,"^W",12,"~:internal-ctor",true,"^V",542,"~:record",true,"^X",542,"~:tag","~$function","~:skip-protocol-flag",["^:",["^1C","^1D","^1E","^1F","^1G","^1I","^1J","^1K","^1L","^1M","^1N","^1O","^1P","^1Q","^1R"]]],"~$pprint",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",759,"^W",7,"^X",759,"^Y",13,"^Z",["^[",["^10",["^[",[["~$value"],["^1Z","^1="]]]]],"^12","Pretty-prints a value to *out*. Options may be passed to override the\n  default *options* map.","~:top-fn",["^ ","^17",false,"~:fixed-arity",2,"^1:",2,"^14",["^[",[["^1Z"],["^1Z","^1="]]],"^Z",["^[",[["^1Z"],["^1Z","^1="]]],"^16",["^[",[null,null]]]],"^;","~$puget.printer/pprint","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",13,"^1[",["^ ","^17",false,"^20",2,"^1:",2,"^14",["^[",[["^1Z"],["^1Z","^1="]]],"^Z",["^[",[["^1Z"],["^1Z","^1="]]],"^16",["^[",[null,null]]],"^14",["^[",[["^1Z"],["^1Z","^1="]]],"^15",null,"^20",2,"^16",["^[",[null,null]],"^W",1,"^17",false,"~:methods",[["^ ","^20",1,"^17",false,"^1V","~$any"],["^ ","^20",2,"^17",false,"^1V","^23"]],"^V",759,"^X",759,"^1:",2,"^1;",true,"^Z",["^[",[["^1Z"],["^1Z","^1="]]],"^12","Pretty-prints a value to *out*. Options may be passed to override the\n  default *options* map."],"~$->CanonicalPrinter",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",28,"^W",12,"^1T",true,"~:factory","~:positional","^V",415,"^X",415,"^Z",["^[",["^10",["^[",[["~$print-handlers"]]]]],"^12","Positional factory function for puget.printer/CanonicalPrinter."],"^;","~$puget.printer/->CanonicalPrinter","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",28,"^14",["^[",[["^27"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^1T",true,"^17",false,"^25","^26","^V",415,"^18","~$puget.printer/CanonicalPrinter","^X",415,"^1:",1,"^1;",true,"^Z",["^[",["^10",["^[",[["^27"]]]]],"^12","Positional factory function for puget.printer/CanonicalPrinter."],"~$unknown-handler",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",287,"^W",7,"^X",287,"^Y",22,"^Z",["^[",["^10",["^[",[["~$printer","^1Z"]]]]],"^12","Print handler which renders the value using the printer's unknown type logic."],"^;","~$puget.printer/unknown-handler","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",22,"^14",["^[",[["^2;","^1Z"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",287,"^18","^23","^X",287,"^1:",2,"^1;",true,"^Z",["^[",["^10",["^[",[["^2;","^1Z"]]]]],"^12","Print handler which renders the value using the printer's unknown type logic."],"~$clojure-handlers",["^ ","^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",349,"^W",6,"^X",349,"^Y",22],"^;","~$puget.printer/clojure-handlers","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",22,"^W",1,"^V",349,"^X",349,"^1V","^1Q","^12","Map of print handlers for 'primary' Clojure types. These should take\n  precedence over the handlers in `clojure-interface-handlers`."],"~$to-hex-string",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",127,"^W",7,"^X",127,"^Y",20,"^Z",["^[",["^10",["^[",[["~$input-string"]]]]],"^12","Returns a hex representation of input-string"],"^;","~$puget.printer/to-hex-string","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",20,"^14",["^[",[["^2@"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",127,"^18","^23","^X",127,"^1:",1,"^1;",true,"^Z",["^[",["^10",["^[",[["^2@"]]]]],"^12","Returns a hex representation of input-string"],"~$pr-handler",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",281,"^W",7,"^X",281,"^Y",17,"^Z",["^[",["^10",["^[",[["^2;","^1Z"]]]]],"^12","Print handler which renders the value with `pr-str`."],"^;","~$puget.printer/pr-handler","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",17,"^14",["^[",[["^2;","^1Z"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",281,"^18","~$string","^X",281,"^1:",2,"^1;",true,"^Z",["^[",["^10",["^[",[["^2;","^1Z"]]]]],"^12","Print handler which renders the value with `pr-str`."],"~$clojure-interface-handlers",["^ ","^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",374,"^W",6,"^X",374,"^Y",32],"^;","~$puget.printer/clojure-interface-handlers","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",32,"^W",1,"^V",374,"^X",374,"^1V","^1Q","^12","Fallback print handlers for other Clojure interfaces."],"~$common-handlers",["^ ","^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",402,"^W",6,"^X",402,"^Y",21],"^;","~$puget.printer/common-handlers","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",21,"^W",1,"^V",402,"^X",402,"^1V",["^:",["^23","^1W","~$clj-nil"]],"^12","Print handler dispatch combining Java and Clojure handlers with inheritance\n  lookups. Provides a similar experience as the standard Clojure\n  pretty-printer."],"~$*options*",["^ ","^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",143,"^W",16,"^X",143,"^Y",25,"~:dynamic",true],"^;","~$puget.printer/*options*","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",25,"^W",1,"^2K",true,"^V",143,"^X",143,"^1V","^1Q","^12","Default options to use when constructing new printers."],"~$->PrettyPrinter",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",25,"^W",12,"^1T",true,"^25","^26","^V",542,"^X",542,"^Z",["^[",["^10",["^[",[["~$width","~$print-meta","~$sort-keys","~$map-delimiter","~$map-coll-separator","~$namespace-maps","~$seq-limit","~$print-color","~$color-markup","~$color-scheme","^27","~$print-fallback"]]]]],"^12","Positional factory function for puget.printer/PrettyPrinter."],"^;","~$puget.printer/->PrettyPrinter","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",25,"^14",["^[",[["^2N","^2O","^2P","^2Q","^2R","^2S","^2T","^2U","^2V","^2W","^27","^2X"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^1T",true,"^17",false,"^25","^26","^V",542,"^18","^1?","^X",542,"^1:",12,"^1;",true,"^Z",["^[",["^10",["^[",[["^2N","^2O","^2P","^2Q","^2R","^2S","^2T","^2U","^2V","^2W","^27","^2X"]]]]],"^12","Positional factory function for puget.printer/PrettyPrinter."],"~$with-options",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",23,"^1[",["^ ","^17",true,"^20",1,"^1:",1,"^14",["^[",[["^[",["^1=","~$body"]]]],"^Z",["^[",[["^1=","~$&","^2["]]],"^16",["^[",[null]]],"^W",11,"^V",181,"~:macro",true,"^X",181,"^Z",["^[",["^10",["^[",[["^1=","~$&","^2["]]]]],"^12","Executes the given expressions with a set of options merged into the current\n  option map."],"^;","~$puget.printer/with-options","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",23,"^1[",["^ ","^17",true,"^20",1,"^1:",1,"^14",["^[",[["^[",["^1=","^2["]]]],"^Z",["^[",[["^1=","~$&","^2["]]],"^16",["^[",[null]]],"^14",["^[",[["^[",["^1=","^2["]]]],"^15",null,"^20",1,"^16",["^[",[null]],"^W",1,"^17",true,"^22",[["^ ","^20",1,"^17",true,"^1V",["^:",["~$seq","~$cljs.core/IList"]]]],"^V",181,"^30",true,"^18","^23","^X",181,"^1:",1,"^1;",false,"^Z",["^[",[["^1=","~$&","^2["]]],"^12","Executes the given expressions with a set of options merged into the current\n  option map."],"~$map->CanonicalPrinter",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",28,"^W",12,"^1T",true,"^25","~:map","^V",415,"^X",415,"^Z",["^[",["^10",["^[",[["~$G__751"]]]]],"^12","Factory function for puget.printer/CanonicalPrinter, taking a map of keywords to field values."],"^;","~$puget.printer/map->CanonicalPrinter","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",28,"^14",["^[",[["^36"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^1T",true,"^17",false,"^25","^35","^V",415,"^18","^29","^X",415,"^1:",1,"^1;",true,"^Z",["^[",["^10",["^[",[["^36"]]]]],"^12","Factory function for puget.printer/CanonicalPrinter, taking a map of keywords to field values."],"~$color-text",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",196,"^W",7,"^X",196,"^Y",17,"^Z",["^[",["^10",["^[",[["~$element","~$text"],["~$options","^39","^3:"]]]]],"^12","Produces text colored according to the active color scheme. This is mostly\n  useful to clients which want to produce output which matches data printed by\n  Puget, but which is not directly printed by the library. Note that this\n  function still obeys the `:print-color` option.","^1[",["^ ","^17",false,"^20",3,"^1:",3,"^14",["^[",[["^39","^3:"],["^3;","^39","^3:"]]],"^Z",["^[",[["^39","^3:"],["^3;","^39","^3:"]]],"^16",["^[",[null,null]]]],"^;","~$puget.printer/color-text","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",17,"^1[",["^ ","^17",false,"^20",3,"^1:",3,"^14",["^[",[["^39","^3:"],["^3;","^39","^3:"]]],"^Z",["^[",[["^39","^3:"],["^3;","^39","^3:"]]],"^16",["^[",[null,null]]],"^14",["^[",[["^39","^3:"],["^3;","^39","^3:"]]],"^15",null,"^20",3,"^16",["^[",[null,null]],"^W",1,"^17",false,"^22",[["^ ","^20",2,"^17",false,"^1V","^23"],["^ ","^20",3,"^17",false,"^1V","^23"]],"^V",196,"^X",196,"^1:",3,"^1;",true,"^Z",["^[",[["^39","^3:"],["^3;","^39","^3:"]]],"^12","Produces text colored according to the active color scheme. This is mostly\n  useful to clients which want to produce output which matches data printed by\n  Puget, but which is not directly printed by the library. Note that this\n  function still obeys the `:print-color` option."],"~$order-collection",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",210,"^W",8,"^X",210,"^Y",24,"~:private",true,"^Z",["^[",["^10",["^[",[["~$mode","~$coll","~$sort-fn"]]]]],"^12","Takes a sequence of entries and checks the mode to determine whether to sort\n  them. Returns an appropriately ordered sequence."],"^3>",true,"^;","~$puget.printer/order-collection","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",24,"^14",["^[",[["^3?","^3@","^3A"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",210,"^18",["^:",["^32","^23"]],"^X",210,"^1:",3,"^1;",true,"^Z",["^[",["^10",["^[",[["^3?","^3@","^3A"]]]]],"^12","Takes a sequence of entries and checks the mode to determine whether to sort\n  them. Returns an appropriately ordered sequence."],"~$get-type",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",114,"^W",7,"^X",114,"^Y",15,"^Z",["^[",["^10",["^[",[["~$x"]]]]],"^12","Get type of a given argument"],"^;","~$puget.printer/get-type","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",15,"^14",["^[",[["~$x"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",114,"^18",["^:",["^23","^2I"]],"^X",114,"^1:",1,"^1;",true,"^Z",["^[",["^10",["^[",[["~$x"]]]]],"^12","Get type of a given argument"],"~$get-identity-hashcode",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",120,"^W",7,"^X",120,"^Y",28,"^Z",["^[",["^10",["^[",[["~$o"]]]]],"^12","Get the hashcode for a given object o"],"^;","~$puget.printer/get-identity-hashcode","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",28,"^14",["^[",[["~$o"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",120,"^18",["^:",[null,"~$number"]],"^X",120,"^1:",1,"^1;",true,"^Z",["^[",["^10",["^[",[["~$o"]]]]],"^12","Get the hashcode for a given object o"],"~$format-unknown",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",242,"^W",7,"^X",242,"^Y",21,"^Z",["^[",["^10",["^[",[["^2;","^1Z"],["^2;","^1Z","~$repr"],["^2;","^1Z","~$tag","^3I"]]]]],"^12","Renders common syntax doc for an unknown representation of a value.","^1[",["^ ","^17",false,"^20",4,"^1:",4,"^14",["^[",[["^2;","^1Z"],["^2;","^1Z","^3I"],["^2;","^1Z","^3J","^3I"]]],"^Z",["^[",[["^2;","^1Z"],["^2;","^1Z","^3I"],["^2;","^1Z","^3J","^3I"]]],"^16",["^[",[null,null,null]]]],"^;","~$puget.printer/format-unknown","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",21,"^1[",["^ ","^17",false,"^20",4,"^1:",4,"^14",["^[",[["^2;","^1Z"],["^2;","^1Z","^3I"],["^2;","^1Z","^3J","^3I"]]],"^Z",["^[",[["^2;","^1Z"],["^2;","^1Z","^3I"],["^2;","^1Z","^3J","^3I"]]],"^16",["^[",[null,null,null]]],"^14",["^[",[["^2;","^1Z"],["^2;","^1Z","^3I"],["^2;","^1Z","^3J","^3I"]]],"^15",null,"^20",4,"^16",["^[",[null,null,null]],"^W",1,"^17",false,"^22",[["^ ","^20",2,"^17",false,"^1V","^23"],["^ ","^20",3,"^17",false,"^1V","^23"],["^ ","^20",4,"^17",false,"^1V","~$cljs.core/IVector"]],"^V",242,"^X",242,"^1:",4,"^1;",true,"^Z",["^[",[["^2;","^1Z"],["^2;","^1Z","^3I"],["^2;","^1Z","^3J","^3I"]]],"^12","Renders common syntax doc for an unknown representation of a value."],"~$cprint-str",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",784,"^W",7,"^X",784,"^Y",17,"^Z",["^[",["^10",["^[",[["^1Z"],["^1Z","^1="]]]]],"^12","Pretty-prints a value to a colored string.","^1[",["^ ","^17",false,"^20",2,"^1:",2,"^14",["^[",[["^1Z"],["^1Z","^1="]]],"^Z",["^[",[["^1Z"],["^1Z","^1="]]],"^16",["^[",[null,null]]]],"^;","~$puget.printer/cprint-str","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",17,"^1[",["^ ","^17",false,"^20",2,"^1:",2,"^14",["^[",[["^1Z"],["^1Z","^1="]]],"^Z",["^[",[["^1Z"],["^1Z","^1="]]],"^16",["^[",[null,null]]],"^14",["^[",[["^1Z"],["^1Z","^1="]]],"^15",null,"^20",2,"^16",["^[",[null,null]],"^W",1,"^17",false,"^22",[["^ ","^20",1,"^17",false,"^1V","^23"],["^ ","^20",2,"^17",false,"^1V",["^:",["^23","^2D"]]]],"^V",784,"^X",784,"^1:",2,"^1;",true,"^Z",["^[",[["^1Z"],["^1Z","^1="]]],"^12","Pretty-prints a value to a colored string."],"~$CanonicalPrinter",["^ ","^1A",1,"^1B",["^:",["^1C","^1D","^1E","^1F","^1G","^1H","^1I","^1J","^1K","^1L","^1M","^1N","^1O","^1P","^1Q","^1R"]],"^;","^29","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",28,"^1S",true,"^W",12,"^1T",true,"^V",415,"^1U",true,"^X",415,"^1V","^1W","^1X",["^:",["^1C","^1D","^1E","^1F","^1G","^1I","^1J","^1K","^1L","^1M","^1N","^1O","^1P","^1Q","^1R"]]],"~$render-str",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",750,"^W",7,"^X",750,"^Y",17,"^Z",["^[",["^10",["^[",[["^2;","^1Z"]]]]],"^12","Renders a value to a string using the given printer."],"^;","~$puget.printer/render-str","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",17,"^14",["^[",[["^2;","^1Z"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",750,"^18",["^:",["^23","^2D"]],"^X",750,"^1:",2,"^1;",true,"^Z",["^[",["^10",["^[",[["^2;","^1Z"]]]]],"^12","Renders a value to a string using the given printer."],"~$merge-options",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",173,"^W",7,"^X",173,"^Y",20,"^Z",["^[",["^10",["^[",[["~$a","~$b"]]]]],"^12","Merges maps of printer options, taking care to combine the color scheme\n  correctly."],"^;","~$puget.printer/merge-options","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",20,"^14",["^[",[["~$a","~$b"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",173,"^18",["^:",["~$clj","^23"]],"^X",173,"^1:",2,"^1;",true,"^Z",["^[",["^10",["^[",[["~$a","~$b"]]]]],"^12","Merges maps of printer options, taking care to combine the color scheme\n  correctly."],"~$format-doc",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",270,"^W",7,"^X",270,"^Y",17,"^Z",["^[",["^10",["^[",[["^2;","^1Z"]]]]],"^12","Recursively renders a print document for the given value."],"^;","~$puget.printer/format-doc","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",17,"^14",["^[",[["^2;","^1Z"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",270,"^18","^23","^X",270,"^1:",2,"^1;",true,"^Z",["^[",["^10",["^[",[["^2;","^1Z"]]]]],"^12","Recursively renders a print document for the given value."],"~$java-handlers",["^ ","^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",310,"^W",6,"^X",310,"^Y",19],"^;","~$puget.printer/java-handlers","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",19,"^W",1,"^V",310,"^X",310,"^1V","^1Q","^12","Map of print handlers for Java types. This supports syntax for regular\n  expressions, dates, UUIDs, and futures."],"~$common-key-ns",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",223,"^W",8,"^X",223,"^Y",21,"^3>",true,"^Z",["^[",["^10",["^[",[["~$m"]]]]],"^12","Extract a common namespace from the keys in the map. Returns a tuple of the\n  ns string and the stripped map, or nil if the keys are not keywords or there\n  is no sufficiently common namespace."],"^3>",true,"^;","~$puget.printer/common-key-ns","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",21,"^14",["^[",[["~$m"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",223,"^18",["^:",["^3L","^2I"]],"^X",223,"^1:",1,"^1;",true,"^Z",["^[",["^10",["^[",[["~$m"]]]]],"^12","Extract a common namespace from the keys in the map. Returns a tuple of the\n  ns string and the stripped map, or nil if the keys are not keywords or there\n  is no sufficiently common namespace."],"~$tagged-handler",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",293,"^W",7,"^X",293,"^Y",21,"^Z",["^[",["^10",["^[",[["^3J","~$value-fn"]]]]],"^12","Generates a print handler function which renders a tagged-literal with the\n  given tag and a value produced by calling the function."],"^;","~$puget.printer/tagged-handler","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",21,"^14",["^[",[["^3J","^40"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",293,"^18","^1W","^X",293,"^1:",2,"^1;",true,"^Z",["^[",["^10",["^[",[["^3J","^40"]]]]],"^12","Generates a print handler function which renders a tagged-literal with the\n  given tag and a value produced by calling the function."],"~$with-color",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",21,"^1[",["^ ","^17",true,"^20",0,"^1:",0,"^14",["^[",[["^[",["^2["]]]],"^Z",["^[",[["~$&","^2["]]],"^16",["^[",[null]]],"^W",11,"^V",189,"^30",true,"^X",189,"^Z",["^[",["^10",["^[",[["~$&","^2["]]]]],"^12","Executes the given expressions with colored output enabled."],"^;","~$puget.printer/with-color","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",21,"^1[",["^ ","^17",true,"^20",0,"^1:",0,"^14",["^[",[["^[",["^2["]]]],"^Z",["^[",[["~$&","^2["]]],"^16",["^[",[null]]],"^14",["^[",[["^[",["^2["]]]],"^15",null,"^20",0,"^16",["^[",[null]],"^W",1,"^17",true,"^22",[["^ ","^20",0,"^17",true,"^1V",["^:",["^32","^33"]]]],"^V",189,"^30",true,"^18","^23","^X",189,"^1:",0,"^1;",false,"^Z",["^[",[["~$&","^2["]]],"^12","Executes the given expressions with colored output enabled."],"~$pprint-str",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",768,"^W",7,"^X",768,"^Y",17,"^Z",["^[",["^10",["^[",[["^1Z"],["^1Z","^1="]]]]],"^12","Pretty-print a value to a string.","^1[",["^ ","^17",false,"^20",2,"^1:",2,"^14",["^[",[["^1Z"],["^1Z","^1="]]],"^Z",["^[",[["^1Z"],["^1Z","^1="]]],"^16",["^[",[null,null]]]],"^;","~$puget.printer/pprint-str","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",17,"^1[",["^ ","^17",false,"^20",2,"^1:",2,"^14",["^[",[["^1Z"],["^1Z","^1="]]],"^Z",["^[",[["^1Z"],["^1Z","^1="]]],"^16",["^[",[null,null]]],"^14",["^[",[["^1Z"],["^1Z","^1="]]],"^15",null,"^20",2,"^16",["^[",[null,null]],"^W",1,"^17",false,"^22",[["^ ","^20",1,"^17",false,"^1V","^23"],["^ ","^20",2,"^17",false,"^1V",["^:",["^23","^2D"]]]],"^V",768,"^X",768,"^1:",2,"^1;",true,"^Z",["^[",[["^1Z"],["^1Z","^1="]]],"^12","Pretty-print a value to a string."],"~$cprint",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",776,"^W",7,"^X",776,"^Y",13,"^Z",["^[",["^10",["^[",[["^1Z"],["^1Z","^1="]]]]],"^12","Like pprint, but turns on colored output.","^1[",["^ ","^17",false,"^20",2,"^1:",2,"^14",["^[",[["^1Z"],["^1Z","^1="]]],"^Z",["^[",[["^1Z"],["^1Z","^1="]]],"^16",["^[",[null,null]]]],"^;","~$puget.printer/cprint","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",13,"^1[",["^ ","^17",false,"^20",2,"^1:",2,"^14",["^[",[["^1Z"],["^1Z","^1="]]],"^Z",["^[",[["^1Z"],["^1Z","^1="]]],"^16",["^[",[null,null]]],"^14",["^[",[["^1Z"],["^1Z","^1="]]],"^15",null,"^20",2,"^16",["^[",[null,null]],"^W",1,"^17",false,"^22",[["^ ","^20",1,"^17",false,"^1V","^23"],["^ ","^20",2,"^17",false,"^1V","^23"]],"^V",776,"^X",776,"^1:",2,"^1;",true,"^Z",["^[",[["^1Z"],["^1Z","^1="]]],"^12","Like pprint, but turns on colored output."],"~$render-out",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",741,"^W",7,"^X",741,"^Y",17,"^Z",["^[",["^10",["^[",[["^2;","^1Z"]]]]],"^12","Prints a value using the given printer."],"^;","~$puget.printer/render-out","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",17,"^14",["^[",[["^2;","^1Z"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",741,"^X",741,"^1:",2,"^1;",true,"^Z",["^[",["^10",["^[",[["^2;","^1Z"]]]]],"^12","Prints a value using the given printer."],"~$format-doc*",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",260,"^W",7,"^X",260,"^Y",18,"^Z",["^[",["^10",["^[",[["^2;","^1Z"]]]]],"^12","Formats a document without considering metadata."],"^;","~$puget.printer/format-doc*","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",18,"^14",["^[",[["^2;","^1Z"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",260,"^18","^23","^X",260,"^1:",2,"^1;",true,"^Z",["^[",["^10",["^[",[["^2;","^1Z"]]]]],"^12","Formats a document without considering metadata."],"~$get-type-name",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",102,"^W",7,"^X",102,"^Y",20,"^Z",["^[",["^10",["^[",[["~$x"]]]]],"^12","Get the type of the given object as a string. For Clojure, gets the name of\n  the class of the object. For ClojureScript, gets either the `name` attribute\n  or the protocol name if the `name` attribute doesn't exist."],"^;","~$puget.printer/get-type-name","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",20,"^14",["^[",[["~$x"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",102,"^18",["^:",["^23","^2D"]],"^X",102,"^1:",1,"^1;",true,"^Z",["^[",["^10",["^[",[["~$x"]]]]],"^12","Get the type of the given object as a string. For Clojure, gets the name of\n  the class of the object. For ClojureScript, gets either the `name` attribute\n  or the protocol name if the `name` attribute doesn't exist."],"~$canonical-printer",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^V",525,"^W",7,"^X",525,"^Y",24,"^Z",["^[",["^10",["^[",[[],["~$handlers"]]]]],"^12","Constructs a new canonical printer with the given handler dispatch.","^1[",["^ ","^17",false,"^20",1,"^1:",1,"^14",["^[",[[],["^4?"]]],"^Z",["^[",[[],["^4?"]]],"^16",["^[",[null,null]]]],"^;","~$puget.printer/canonical-printer","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",24,"^1[",["^ ","^17",false,"^20",1,"^1:",1,"^14",["^[",[[],["^4?"]]],"^Z",["^[",[[],["^4?"]]],"^16",["^[",[null,null]]],"^14",["^[",[[],["^4?"]]],"^15",null,"^20",1,"^16",["^[",[null,null]],"^W",1,"^17",false,"^22",[["^ ","^20",0,"^17",false,"^1V","^23"],["^ ","^20",1,"^17",false,"^1V",["^:",["^3T","^23"]]]],"^V",525,"^X",525,"^1:",1,"^1;",true,"^Z",["^[",[[],["^4?"]]],"^12","Constructs a new canonical printer with the given handler dispatch."],"~$map->PrettyPrinter",["^ ","^S",null,"^T",["^ ","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",25,"^W",12,"^1T",true,"^25","^35","^V",542,"^X",542,"^Z",["^[",["^10",["^[",[["~$G__769"]]]]],"^12","Factory function for puget.printer/PrettyPrinter, taking a map of keywords to field values."],"^;","~$puget.printer/map->PrettyPrinter","^U","/home/enyert/Projects/gaiwan/puget/src/puget/printer.cljc","^Y",25,"^14",["^[",[["^4B"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^1T",true,"^17",false,"^25","^35","^V",542,"^18","^1?","^X",542,"^1:",1,"^1;",true,"^Z",["^[",["^10",["^[",[["^4B"]]]]],"^12","Factory function for puget.printer/PrettyPrinter, taking a map of keywords to field values."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^:",["^2P","~$uuid","^31","~:bold","~:class-delimiter","~:align","~$cljs.core/binding","~:map-coll-separator","^2Q","~:group","^2L","~:print-meta","~:number","~:yellow","^3S","~:namespace-maps","~:symbol","~:color-scheme","~:green","~:cyan","~:print-fallback","^2R","~:width","~$inst","^2O","~:string","~:ansi","^2S","^2W","~:delimiter","^2X","^2N","~:function-symbol","^V","~:keyword","~:print-handlers","~:seq-limit","~:red","~:blue","~:nil","~:value-fn","~:color-markup","~:print-color","~:class-name","~:magenta","~:sort-keys","~:form","^1V","~:pretty","^27","^2T","~:map-delimiter","~:boolean","^2V","~:character","^2U","~:span","~:black"]],"~:order",["^4M","^4R","^4T","^4W","^4X","^59","^5:","^5=","^5@","^4J","^4P","^4S","^4Z","^50","^51","^52","^57","^5;","^1V","^5A","^5B","^56","^4V","^4I","^5<","^55","^4Q","^5D","^4U","^5?","^4[","^4L","^2L","^3S","^31","^5C","^53","^58","^4Y","^4H","^4N","^4K","^5>","^27","^4O","^54","^V","^2N","^2O","^2P","^2Q","^2R","^2S","^2T","^2U","^2V","^2W","^2X"]],"^12","Enhanced printing functions for rendering Clojure values. The following\n  options are available to control the printer:\n\n  #### General Rendering\n\n  `:width`\n\n  Number of characters to try to wrap pretty-printed forms at.\n\n  `:print-meta`\n\n  If true, metadata will be printed before values. Defaults to the value of\n  `*print-meta*` if unset.\n\n  #### Collection Options\n\n  `:sort-keys`\n\n  Print maps and sets with ordered keys. If true, the pretty printer will sort\n  all unordered collections before printing. If a number, counted collections\n  will be sorted if they are smaller than the given size. Otherwise,\n  collections are printed in their natural sort order. Sorted collections are\n  always printed in their natural sort order.\n\n  `:map-delimiter`\n\n  The text placed between key-value pairs in a map.\n\n  `:map-coll-separator`\n\n  The text placed between a map key and a collection value. The keyword :line\n  will cause line breaks if the whole map does not fit on a single line.\n\n  `:namespace-maps`\n\n  Extract common keyword namespaces from maps using the namespace map literal\n  syntax. See `*print-namespace-maps*`.\n\n  `:seq-limit`\n\n  If set to a positive number, then lists will only render at most the first n\n  elements. This can help prevent unintentional realization of infinite lazy\n  sequences.\n\n  #### Color Options\n\n  `:print-color`\n\n  When true, ouptut colored text from print functions.\n\n  `:color-markup`\n\n  :ansi for ANSI color text (the default),\n  :html-inline for inline-styled html,\n  :html-classes to use the names of the keys in the :color-scheme map\n  as class names for spans so styling can be specified via CSS.\n\n  `:color-scheme`\n\n  Map of syntax element keywords to color codes.\n\n  #### Type Handling\n\n  `:print-handlers`\n\n  A lookup function which will return a rendering function for a given class\n  type. This will be tried before the built-in type logic. See the\n  `puget.dispatch` namespace for some helpful constructors. The returned\n  function should accept the current printer and the value to be rendered,\n  returning a format document.\n\n  `:print-fallback`\n\n  Keyword argument specifying how to format unknown values. Puget supports a few\n  different options:\n\n  - `:pretty` renders values with the default colored representation.\n  - `:print` defers to the standard print method by rendering unknown values\n    using `pr-str`.\n  - `:error` will throw an exception when types with no defined handler are\n    encountered.\n  - A function value will be called with the current printer options and the\n    unknown value and is expected to return a formatting document representing\n    it.\n  "]